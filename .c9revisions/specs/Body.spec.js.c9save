{"ts":1352519329630,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/// <reference path=\"_references.js\" />\n\ndefine(\n['src/Body', 'src/Vector'],\nfunction (Body, Vector) {\n    var _spec = this;\n\n    describe('Body Class', function () {\n        beforeEach(function () {\n            _spec.atRest = new Body({ \n                mass: 10, \n                x: 0, y: 0,\n                v: { magnitude: 0, angle: 0 }\n            }); \n            _spec.inMotion = new Body({\n                mass: 10,\n                x: 0, y: 0,\n                v: { magnitude: 1, angle: 0 }\n            })   \n        })\n\n        describe(\"Newton's First Law (Inertia)\", function () {\n            it('An object at rest will remain at rest', function () {\n                // Check on the body after 30 seconds\n                _spec.atRest.advance(30000);\n\n                // Should not have moved\n                expect(atRest.x).toEqual(0);\n                expect(atRest.y).toEqual(0);\n            });\n\n            it('unless acted on by an unbalanced force', function () {\n                // Apply an a force for 1 second and then check on it\n                _spec.atRest.forces.push({ magnitude: { value: 4, duration: 1000 }, angle: 45 });\n                _spec.atRest.advance(1000);\n\n                // Should have moved\n                expect(_spec.atRest.x).not.toEqual(0);\n                expect(_spec.atRest.y).not.toEqual(0);\n            });\n\n            it('An object in motion continues in motion with the same speed and in the same direction', function () {\n                // First, make sure it starts at zero\n                expect(_spec.inMotion.x).toEqual(0);\n                expect(_spec.inMotion.y).toEqual(0);\n                \n                // Check on the body after 30 seconds\n                _spec.inMotion.advance(30000);\n\n                // Should have stayed in motion\n                expect(_spec.inMotion.x).toEqual(30);\n                expect(_spec.inMotion.y).toEqual(0);\n            })\n        });\n    });\n});"]],"start1":0,"start2":0,"length1":0,"length2":1946}]],"length":1946}
{"contributors":[],"silentsave":false,"ts":1352519446197,"patch":[[{"diffs":[[0,"      })"],[1,";"],[0,"   \n    "]],"start1":503,"start2":503,"length1":16,"length2":17},{"diffs":[[0,"      })"],[1,";"],[0,"\n\n      "]],"start1":518,"start2":518,"length1":16,"length2":17},{"diffs":[[0,"     expect("],[1,"_spec."],[0,"atRest.x).to"]],"start1":814,"start2":814,"length1":24,"length2":30},{"diffs":[[0," expect("],[1,"_spec."],[0,"atRest.y"]],"start1":869,"start2":869,"length1":16,"length2":22}]],"length":1960,"saved":false}

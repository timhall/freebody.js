{"ts":1352569264479,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Body with mass, position, velocity, acceleration, and forces\n *\n * Example:\n * ```\n * var ball = new Body();\n *\n * // Set initial position\n * ball.x = 10; \n * ball.y = 10;\n *\n * // Set initial velocity\n * ball.v = { magnitude: 60, angle: 45 };\n * \n * // Add gravity\n * ball.a.push({ magnitude: 9.8, angle: 90 });\n * \n * // Check on ball after 3 seconds\n * // (Advance it 3000 ms into the future)\n * ball.advance(3000);\n * \n * // Get current velocity in y-direction\n * var speed = ball.v.y();\n *\n * // Strap a rocket to the ball for 8 seconds\n * ball.forces.push({ magnitude: { value: 100, duration: 8000 }, angle: 270 });\n * \n * // and check on the height after 12 seconds\n * ball.advance(12000);\n * var height = ball.y;\n *\n * // Finally, set values quickly inline\n * ball = new Body({ x: 10, y: 10, v: { magnitude: 60, angle: 45 } });\n * \n * ```\n */\ndefine(\n['src/Vector'],\nfunction (Vector) {\n    var\n        /**\n         * @class Body\n         * @param {Object} [options]\n         *     Any options to set inline (mass, position, etc)\n         * @return {Object} Body\n         */\n\n        Body = function (options) {\n            \n        },\n\n        /**\n         * Advance through time and find the future body state\n         *\n         * @param {Number} time (in ms)\n         */\n\n        advance = function (time) {\n            \n        },\n\n        /**\n         * Get the body's current x-position\n         */\n\n        x = function () {\n            return 0;\n        },\n\n        /**\n         * Get the body's current y-position\n         */\n\n        y = function () {\n            return 0;\n        };\n\n    /*\n     * @prototype\n     */\n    Body.prototype.advance = advance;\n    Body.prototype.x = x;\n    Body.prototype.y = y;\n\n    return Body;\n})"]],"start1":0,"start2":0,"length1":0,"length2":1755}]],"length":1755}
